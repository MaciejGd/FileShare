#pragma once
#include <string>

std::string webpage = "<!DOCTYPE html >"
"<html>"
"  <head>"
"    <meta charset=\"UTF-8\">"
"  </head>"
"  <body>"
"    <div>"
"      <h1 id=\"title\">FILES TO DOWNLOAD</h1>"
"      <button id=\"prev\" onclick=\"prev_node()\">"
"        Previous_dir"
"      </button>"
"      <script>"
"        var previous_node = [];"
"        function fetchJSONData() {"
"          fetch(\"./.download.json\").then((res) => {"
"            if (!res.ok)"
"              throw new Error (`HTTP error! Status: ${res.status}`);"
"            return res.json();"
"          })"
"          .then((data) => "
"          {"
"            console.log(data.url)"
"            previous_node.push(data);"
"            populateList(data);"
"          })"
"          .catch((error) => "
"            console.error(\"Unable to fetch data:\", error));"
"        }"
"  "
"        function populateList(data) {"
"          var list = document.getElementById(\"list\");"
"          list.innerHTML = \"\"; // Clear the list"
""
"          data.files.forEach(file => {"
"              const listItem = document.createElement(\"li\");"
"              const link = document.createElement(\"a\");"
""
"              if (file.files && file.files.length !== 0) {"
"                // For directories"
"                link.href = \"#\";"
"                link.textContent = file.name + \" (Directory)\";"
"                link.addEventListener('click', (event) => {"
"                    event.preventDefault();"
"                    // Open the directory"
"                    previous_node.push(data);"
"                    populateList(file);"
"                });"
"                const downloadAllButton = document.createElement(\"button\");"
"                downloadAllButton.textContent = \"Download directory\";"
"                downloadAllButton.addEventListener('click', (event)=> {"
"                  event.stopPropagation();"
"                  downloadAllFiles(file);"
"                });"
"                listItem.appendChild(link);"
"                listItem.appendChild(downloadAllButton);"
"              } else {"
"                  // For files"
"                  link.href = file.url;"
"                  link.textContent = file.name;"
"                  link.setAttribute('download', '');"
"                  listItem.appendChild(link);"
"              }"
"              list.appendChild(listItem);"
"          });"
"        }"
"        function prev_node()"
"        {"
"          if (previous_node.length !== 0)"
"          {  "
"            console.log(previous_node);"
"            var last_node = previous_node.pop();"
"            populateList(last_node);"
"          }"
"        }"
"        function downloadAllFiles(directory){"
"          const fileUrls = [];"
""
"          function collectFileUrls(file) {"
"            if (file.files && file.files.length !== 0)"
"            {"
"              file.files.forEach((subFile) => { collectFileUrls(subFile); }); "
"            }"
"            else "
"            {"
"              fileUrls.push(file.url);"
"            }"
"          }"
""
"          collectFileUrls(directory);"
""
"          fileUrls.forEach((url) => {"
"            const link = document.createElement('a');"
"            link.href = url;"
"            link.download = '';"
"            document.body.appendChild(link);"
"            link.click();"
"            document.body.removeChild(link);"
"          })"
"        }"
"        fetchJSONData();"
"      </script>"
"	  <ul id=\"list\">"
"	  </ul>"
"    "
"    </div>"
"  </body>"
"</html>"
;